{"version":3,"sources":["webpack://myJsonReact/webpack/universalModuleDefinition","webpack://myJsonReact/webpack/bootstrap","webpack://myJsonReact/./src/MyJsonReact/JsonReactException.js","webpack://myJsonReact/external \"react\"","webpack://myJsonReact/./src/MyJsonReact/TypeManager.js","webpack://myJsonReact/./src/MyJsonReact/componentsSelector.js","webpack://myJsonReact/./node_modules/is-plain-object/index.js","webpack://myJsonReact/./src/MyJsonReact/ErrorComponent.jsx","webpack://myJsonReact/./src/MyJsonReact/generateReactComponent.jsx","webpack://myJsonReact/./node_modules/isobject/index.js","webpack://myJsonReact/./src/MyJsonReact/index.jsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","JsonReactException","message","jsonObj","arguments","length","undefined","_classCallCheck","this","_JsonReactException","TypeManager","prop","propName","type","String","_JsonReactException2","default","formatter","typeManagerObj","resetTypeManager","makeTypeManager","typeManager","getTypeManager","setComponentsSelector","newComponentsSelector","componentsSelector","getComponentsSelector","ComponentsSelector","components","component","isObject","isObjectObject","toString","ctor","prot","constructor","_react","_ref","exception","_react2","createElement","getComponent","getProps","getChildren","generateComponent","_componentsSelector","_TypeManager","componentName","props","propsParsed","keys","forEach","getValue","children","Array","isArray","map","child","key","_isPlainObject2","componentData","Component","e","setJsonObj","val","jsonData","options","_componentsSelector2","_generateReactComponent2","JSON","parse","validateParseJson","CustomErrorComponent","errorComponent","_ErrorComponent2"],"mappings":"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","file":"myJsonReact.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myJsonReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"myJsonReact\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\nexport default class JsonReactException{\n  constructor(message, jsonObj = undefined) {\n    this.message = message\n    this.jsonObj = jsonObj\n  }\n\n  getJsonObject() {\n    return this.jsonObj\n  }\n\n  getMessage() {\n    return this.message\n  }\n\n  setJsonObj(jsonObj) {\n    this.jsonObj = jsonObj\n  }\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import JsonReactException from './JsonReactException'\n\n/**\n * @todo Handler the props type?\n */\nclass TypeManager {\n  getValue(prop, propName) {\n    const { type, value } = prop\n    if (type === undefined) {\n      return value\n    }\n\n    if (typeof type != 'string' && !(type instanceof String)) {\n      const message = `In property ${propName}, the property type should be a string.`\n      throw new JsonReactException(message)\n    }\n\n    const formatter = this[type]\n\n    if (formatter) {\n      return formatter(value)\n    }\n\n    throw new JsonReactException(`Type ${type} not found.`)\n  }\n}\n\nlet typeManagerObj = null\n\n/**\n * only for tests\n */\nexport const resetTypeManager = () => {\n  typeManagerObj = null\n}\n\nexport const makeTypeManager = (typeManager = undefined) => {\n  typeManagerObj = typeManager !== undefined ? typeManager : new TypeManager()\n\n  if (typeManagerObj instanceof TypeManager) {\n    return typeManagerObj\n  }\n\n  throw new JsonReactException('Invalid type manager.')\n}\n\nexport const getTypeManager = () => {\n  if (typeManagerObj !== null) {\n    return typeManagerObj\n  }\n\n  throw new JsonReactException('Type manager is not defined.')\n}\n\nexport default TypeManager\n","import JsonReactException from './JsonReactException'\n\nclass ComponentsSelector {\n\n  constructor(components) {\n    this.components = components\n  }\n\n  getComponents() {\n    return this.components\n  }\n\n  getComponent(name) {\n    const component = this.components[name]\n    if (component) {\n      return component\n    }\n\n    throw new JsonReactException(`Component \"${name}\" not found.`)\n  }\n}\n\nlet componentsSelector = null\n\nexport function setComponentsSelector(newComponentsSelector) {\n  componentsSelector = newComponentsSelector\n}\n\nexport function getComponentsSelector() {\n  return componentsSelector\n}\n\nexport default ComponentsSelector","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","import React from 'react'\nexport default ({exception}) => <div>{ exception.message }</div>","import React from 'react'\nimport isPlainObject from 'is-plain-object'\nimport { getComponentsSelector } from './componentsSelector'\nimport { getTypeManager } from './TypeManager'\nimport JsonReactException from './JsonReactException'\n\n/**\n * returns the comopnent `ComponentName` from the components selector\n * identify with the id `componentSelectorId`\n * @param {String} componentName Component name\n * @param {String} componentSelectorId Id it is used to get the `componentSelectorId`\n * @return {ComponentsSelector}\n */\nexport function getComponent(componentName) {\n  return getComponentsSelector().getComponent(componentName)\n}\n\n/**\n * Get the props from the json object and transform them in React component props.\n * @param {Object} props Json props\n * @return {Object} Component props.\n */\nexport function getProps(props) {\n  if (!props) {\n    return {}\n  }\n\n  const propsParsed = {}\n  const typeManager = getTypeManager()\n\n  Object.keys(props).forEach(propName => {\n    const prop = props[propName]\n    propsParsed[propName] = typeManager.getValue(prop, propName)\n  })\n\n  return propsParsed\n}\n\nexport function getChildren(children) {\n  if (children === null) {\n    return null\n  }\n\n  if (Array.isArray(children)) {\n    return children.map((child, key) => generateComponent(child, key + 1))\n  }\n\n  if (isPlainObject(children)) {\n    return generateComponent(children)\n  }\n\n  throw new JsonReactException('One of the property \"children\", in the json data, is invalid.')\n}\n\nexport default function generateComponent(componentData, key=null) {\n  try {\n    const componentName = componentData.component\n    const Component = getComponent(componentName)\n    const props = getProps(componentData.props)\n    const children = getChildren(\n      componentData.children !== undefined ? componentData.children : null\n    )\n\n    if (key) {\n      props.key = key\n    }\n\n    return children !== null\n      ? <Component { ...props }>{ children }</Component>\n      : <Component { ...props }/>\n  } catch(e) {\n    e.setJsonObj(componentData)\n    throw e\n  }\n}","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/**!\n * My JSON React.\n * @author David Casado <dcasadomartinez@gmail.com>\n * @license MIT\n */\nimport React from 'react'\nimport isPlainObject from 'is-plain-object'\nimport ComponentsSelector, { setComponentsSelector } from './componentsSelector'\nimport { makeTypeManager } from './TypeManager'\nimport generateReactComponent from './generateReactComponent'\nimport ErrorComponent from './ErrorComponent'\nimport JsonReactException from './JsonReactException'\nimport TypeManager from './TypeManager'\n\n\n/**\n * Check which the paramater `jsonData` is a valid plain object or a json string.\n * If it is a json string then it is parsed.\n *\n * @param {string|object} jsonData json object will\n * @return {object} jsonData parsed (if it is a string)\n * @throws {JsonReactException} If `jsonData` is an invalid json string or it isn't a plain object.\n */\nfunction validateParseJson(jsonData) {\n  if (typeof jsonData == 'string' || jsonData instanceof String) {\n    try {\n      jsonData = JSON.parse(jsonData)\n    } catch(e) {\n      throw new JsonReactException('Invalid json string.')\n    }\n  }\n\n  if (!isPlainObject(jsonData)) {\n    throw new JsonReactException('The json data is not a plain object.')\n  }\n\n  return jsonData\n}\n\n\n/**\n * Transform the parameter `jsonData` in a React component.\n * The only react components that you can use in the `jsonData` are defined in the\n * parameter `components`\n *\n * Options is an object to customize the use of the function.\n * All options:\n * - typeManager: Instance of a subclass of TypeManager.\n * This option is used to customize the types of component properties.\n * - errorComponent: React component used in the errors.\n * This component will use if there are an error when render the object `jsonData`\n *\n * @param {object|string} jsonData\n *\n */\nfunction start(jsonData, components, options={}) {\n  try {\n    setComponentsSelector(new ComponentsSelector(components))\n    makeTypeManager(options.typeManager)\n\n    return generateReactComponent(validateParseJson(jsonData))\n\n  } catch(e) {\n    if (e instanceof JsonReactException) {\n      const CustomErrorComponent = options.errorComponent\n      return CustomErrorComponent\n        ? <CustomErrorComponent exception={ e }/>\n        : <ErrorComponent exception={ e } />\n    }\n\n    throw e\n  }\n}\n\nexport default start\nexport { TypeManager }\n"],"sourceRoot":""}